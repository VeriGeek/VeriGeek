{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omdag\\\\OneDrive\\\\Desktop\\\\gfg\\\\client\\\\src\\\\pages\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Typography, Button, Grid, Paper, Tabs, Tab, Snackbar, Alert } from '@mui/material';\nimport { PlayArrow, Save, ArrowBack, LightbulbOutlined } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const [code, setCode] = useState(`module full_adder(\n  input wire a, b, cin,\n  output wire sum, cout\n);\n  // Implement full adder logic\n  // sum = a XOR b XOR cin\n  // cout = (a AND b) OR (cin AND (a XOR b))\n  \n  // Internal wire for a XOR b\n  wire a_xor_b;\n  \n  // Calculate sum\n  assign a_xor_b = a ^ b;\n  assign sum = a_xor_b ^ cin;\n  \n  // Calculate carry out\n  assign cout = (a & b) | (cin & a_xor_b);\nendmodule\n\n// Testbench (uncomment to simulate)\n/*\nmodule full_adder_tb;\n  // Testbench signals\n  reg a, b, cin;\n  wire sum, cout;\n  \n  // Instantiate the full_adder\n  full_adder dut(\n    .a(a),\n    .b(b),\n    .cin(cin),\n    .sum(sum),\n    .cout(cout)\n  );\n  \n  // Test stimulus\n  initial begin\n    // Display header\n    $display(\"a b cin | sum cout\");\n    $display(\"--------+---------\");\n    \n    // Test all input combinations\n    {a, b, cin} = 3'b000; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b001; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b010; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b011; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b100; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b101; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b110; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    {a, b, cin} = 3'b111; #10;\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\n    \n    $finish;\n  end\nendmodule\n*/`);\n  const [output, setOutput] = useState('');\n  const [isCompiling, setIsCompiling] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  // Mock exercise data\n  const exerciseData = {\n    id: '103',\n    title: 'Implementing a Full Adder',\n    description: 'Create a Verilog module for a full adder with inputs a, b, cin and outputs sum and cout. A full adder adds three bits and produces a sum bit and a carry bit.',\n    objectives: ['Understand the operation of a full adder circuit', 'Implement combinational logic using Verilog assign statements', 'Utilize internal wires for intermediate signals', 'Apply proper port declarations with the wire data type'],\n    background: 'A full adder is a fundamental building block in digital circuit design, used to add two binary digits along with a carry input. It produces a sum output and a carry output, which can be cascaded to create multi-bit adders.',\n    testCases: [{\n      inputs: 'a=0, b=0, cin=0',\n      expectedOutputs: 'sum=0, cout=0',\n      explanation: 'With all inputs 0, both sum and carry are 0'\n    }, {\n      inputs: 'a=1, b=0, cin=0',\n      expectedOutputs: 'sum=1, cout=0',\n      explanation: 'Adding just a single 1 gives sum=1, with no carry'\n    }, {\n      inputs: 'a=0, b=1, cin=0',\n      expectedOutputs: 'sum=1, cout=0',\n      explanation: 'Adding just a single 1 gives sum=1, with no carry'\n    }, {\n      inputs: 'a=0, b=0, cin=1',\n      expectedOutputs: 'sum=1, cout=0',\n      explanation: 'Adding just a single 1 gives sum=1, with no carry'\n    }, {\n      inputs: 'a=1, b=1, cin=0',\n      expectedOutputs: 'sum=0, cout=1',\n      explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)'\n    }, {\n      inputs: 'a=1, b=0, cin=1',\n      expectedOutputs: 'sum=0, cout=1',\n      explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)'\n    }, {\n      inputs: 'a=0, b=1, cin=1',\n      expectedOutputs: 'sum=0, cout=1',\n      explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)'\n    }, {\n      inputs: 'a=1, b=1, cin=1',\n      expectedOutputs: 'sum=1, cout=1',\n      explanation: 'Adding three 1s results in 1 with a carry of 1 (binary 11)'\n    }],\n    hints: ['Remember the boolean equations for a full adder: sum = a âŠ• b âŠ• cin and cout = (aÂ·b) + (cinÂ·(aâŠ•b))', 'Use intermediate wires to make your code more readable', 'The XOR operator in Verilog is represented by the caret symbol (^)', 'Use the & operator for AND and | operator for OR operations'],\n    truthTable: [{\n      a: 0,\n      b: 0,\n      cin: 0,\n      sum: 0,\n      cout: 0\n    }, {\n      a: 0,\n      b: 0,\n      cin: 1,\n      sum: 1,\n      cout: 0\n    }, {\n      a: 0,\n      b: 1,\n      cin: 0,\n      sum: 1,\n      cout: 0\n    }, {\n      a: 0,\n      b: 1,\n      cin: 1,\n      sum: 0,\n      cout: 1\n    }, {\n      a: 1,\n      b: 0,\n      cin: 0,\n      sum: 1,\n      cout: 0\n    }, {\n      a: 1,\n      b: 0,\n      cin: 1,\n      sum: 0,\n      cout: 1\n    }, {\n      a: 1,\n      b: 1,\n      cin: 0,\n      sum: 0,\n      cout: 1\n    }, {\n      a: 1,\n      b: 1,\n      cin: 1,\n      sum: 1,\n      cout: 1\n    }]\n  };\n  const handleTabChange = (_, newValue) => setTabValue(newValue);\n  const handleRunCode = () => {\n    setIsCompiling(true);\n    setOutput('');\n\n    // Simulate compilation and running\n    setTimeout(() => {\n      if (code.includes('assign') || code.includes('wire')) {\n        setOutput(`\nCompilation successful!\n\nRunning test cases:\nTest Case 1: a=0, b=0, cin=0\n  Expected: sum=0, cout=0\n  Actual:   sum=0, cout=0\n  Result:   âœ… PASSED\n\nTest Case 2: a=1, b=1, cin=1\n  Expected: sum=1, cout=1\n  Actual:   sum=1, cout=1\n  Result:   âœ… PASSED\n\nSummary: 2/2 test cases passed.\nðŸŽ‰ Congratulations! All tests passed.\n`);\n        setNotification({\n          open: true,\n          message: 'All tests passed! Great job!',\n          severity: 'success'\n        });\n      } else {\n        setOutput(`\nCompilation Error:\nError: No implementation found.\nPlease implement the full adder logic before running the code.\n`);\n        setNotification({\n          open: true,\n          message: 'Compilation failed. Please check your code.',\n          severity: 'error'\n        });\n      }\n      setIsCompiling(false);\n    }, 1000);\n  };\n  const handleSaveCode = () => {\n    setNotification({\n      open: true,\n      message: 'Code saved successfully!',\n      severity: 'success'\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n  const handleShowHint = () => {\n    setNotification({\n      open: true,\n      message: `Hint: ${exerciseData.hints[0]}`,\n      severity: 'info'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"container page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/modules/1\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 22\n        }, this),\n        sx: {\n          mb: 2\n        },\n        children: \"Back to Module\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        color: \"primary\",\n        children: exerciseData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          mb: 2\n        },\n        children: exerciseData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Test Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: exerciseData.testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 1,\n              typography: 'body2',\n              fontFamily: 'monospace'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Test \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 51\n            }, this), testCase.inputs, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 34\n            }, this), \"Expected: \", testCase.expectedOutputs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Verilog Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              p: 2,\n              backgroundColor: '#f5f5f5',\n              minHeight: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: code,\n              onChange: e => setCode(e.target.value),\n              style: {\n                width: '100%',\n                height: '380px',\n                fontFamily: 'monospace',\n                fontSize: '14px',\n                padding: '8px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                resize: 'none',\n                backgroundColor: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 28\n              }, this),\n              onClick: handleRunCode,\n              disabled: isCompiling,\n              children: isCompiling ? 'Running...' : 'Run Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 28\n              }, this),\n              onClick: handleSaveCode,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(LightbulbOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 28\n              }, this),\n              onClick: handleShowHint,\n              sx: {\n                ml: 'auto'\n              },\n              children: \"Hint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabValue,\n            onChange: handleTabChange,\n            sx: {\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Console\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              p: 2,\n              fontFamily: 'monospace',\n              fontSize: '14px',\n              backgroundColor: '#f8f8f8',\n              overflowY: 'auto',\n              whiteSpace: 'pre-wrap',\n              minHeight: '400px'\n            },\n            children: isCompiling ? 'Compiling and running your code...' : tabValue === 0 ? output || 'Run your code to see the output here.' : 'Console output will appear here when you run your code.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"cUDQ8zkUJdwBgBe34z8uumCjOz0=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","Link","Box","Typography","Button","Grid","Paper","Tabs","Tab","Snackbar","Alert","PlayArrow","Save","ArrowBack","LightbulbOutlined","jsxDEV","_jsxDEV","CodeEditor","_s","code","setCode","output","setOutput","isCompiling","setIsCompiling","tabValue","setTabValue","notification","setNotification","open","message","severity","exerciseData","id","title","description","objectives","background","testCases","inputs","expectedOutputs","explanation","hints","truthTable","a","b","cin","sum","cout","handleTabChange","_","newValue","handleRunCode","setTimeout","includes","handleSaveCode","handleCloseNotification","handleShowHint","className","children","sx","mb","component","to","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","color","elevation","p","container","spacing","map","testCase","index","item","xs","sm","typography","fontFamily","md","height","display","flexDirection","borderBottom","borderColor","flexGrow","backgroundColor","minHeight","value","onChange","e","target","style","width","fontSize","padding","border","borderRadius","resize","borderTop","gap","onClick","disabled","ml","label","overflowY","whiteSpace","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/omdag/OneDrive/Desktop/gfg/client/src/pages/CodeEditor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Typography, Button, Grid, Paper, Tabs, Tab, Snackbar, Alert } from '@mui/material';\r\nimport { PlayArrow, Save, ArrowBack, LightbulbOutlined } from '@mui/icons-material';\r\n\r\nconst CodeEditor = () => {\r\n  const [code, setCode] = useState(\r\n`module full_adder(\r\n  input wire a, b, cin,\r\n  output wire sum, cout\r\n);\r\n  // Implement full adder logic\r\n  // sum = a XOR b XOR cin\r\n  // cout = (a AND b) OR (cin AND (a XOR b))\r\n  \r\n  // Internal wire for a XOR b\r\n  wire a_xor_b;\r\n  \r\n  // Calculate sum\r\n  assign a_xor_b = a ^ b;\r\n  assign sum = a_xor_b ^ cin;\r\n  \r\n  // Calculate carry out\r\n  assign cout = (a & b) | (cin & a_xor_b);\r\nendmodule\r\n\r\n// Testbench (uncomment to simulate)\r\n/*\r\nmodule full_adder_tb;\r\n  // Testbench signals\r\n  reg a, b, cin;\r\n  wire sum, cout;\r\n  \r\n  // Instantiate the full_adder\r\n  full_adder dut(\r\n    .a(a),\r\n    .b(b),\r\n    .cin(cin),\r\n    .sum(sum),\r\n    .cout(cout)\r\n  );\r\n  \r\n  // Test stimulus\r\n  initial begin\r\n    // Display header\r\n    $display(\"a b cin | sum cout\");\r\n    $display(\"--------+---------\");\r\n    \r\n    // Test all input combinations\r\n    {a, b, cin} = 3'b000; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b001; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b010; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b011; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b100; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b101; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b110; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    {a, b, cin} = 3'b111; #10;\r\n    $display(\"%b %b %b  |  %b   %b\", a, b, cin, sum, cout);\r\n    \r\n    $finish;\r\n  end\r\nendmodule\r\n*/`);\r\n  const [output, setOutput] = useState('');\r\n  const [isCompiling, setIsCompiling] = useState(false);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n\r\n  // Mock exercise data\r\n  const exerciseData = {\r\n    id: '103',\r\n    title: 'Implementing a Full Adder',\r\n    description: 'Create a Verilog module for a full adder with inputs a, b, cin and outputs sum and cout. A full adder adds three bits and produces a sum bit and a carry bit.',\r\n    objectives: [\r\n      'Understand the operation of a full adder circuit',\r\n      'Implement combinational logic using Verilog assign statements',\r\n      'Utilize internal wires for intermediate signals',\r\n      'Apply proper port declarations with the wire data type'\r\n    ],\r\n    background: 'A full adder is a fundamental building block in digital circuit design, used to add two binary digits along with a carry input. It produces a sum output and a carry output, which can be cascaded to create multi-bit adders.',\r\n    testCases: [\r\n      { inputs: 'a=0, b=0, cin=0', expectedOutputs: 'sum=0, cout=0', explanation: 'With all inputs 0, both sum and carry are 0' },\r\n      { inputs: 'a=1, b=0, cin=0', expectedOutputs: 'sum=1, cout=0', explanation: 'Adding just a single 1 gives sum=1, with no carry' },\r\n      { inputs: 'a=0, b=1, cin=0', expectedOutputs: 'sum=1, cout=0', explanation: 'Adding just a single 1 gives sum=1, with no carry' },\r\n      { inputs: 'a=0, b=0, cin=1', expectedOutputs: 'sum=1, cout=0', explanation: 'Adding just a single 1 gives sum=1, with no carry' },\r\n      { inputs: 'a=1, b=1, cin=0', expectedOutputs: 'sum=0, cout=1', explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)' },\r\n      { inputs: 'a=1, b=0, cin=1', expectedOutputs: 'sum=0, cout=1', explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)' },\r\n      { inputs: 'a=0, b=1, cin=1', expectedOutputs: 'sum=0, cout=1', explanation: 'Adding two 1s results in 0 with a carry of 1 (binary 10)' },\r\n      { inputs: 'a=1, b=1, cin=1', expectedOutputs: 'sum=1, cout=1', explanation: 'Adding three 1s results in 1 with a carry of 1 (binary 11)' }\r\n    ],\r\n    hints: [\r\n      'Remember the boolean equations for a full adder: sum = a âŠ• b âŠ• cin and cout = (aÂ·b) + (cinÂ·(aâŠ•b))',\r\n      'Use intermediate wires to make your code more readable',\r\n      'The XOR operator in Verilog is represented by the caret symbol (^)',\r\n      'Use the & operator for AND and | operator for OR operations'\r\n    ],\r\n    truthTable: [\r\n      { a: 0, b: 0, cin: 0, sum: 0, cout: 0 },\r\n      { a: 0, b: 0, cin: 1, sum: 1, cout: 0 },\r\n      { a: 0, b: 1, cin: 0, sum: 1, cout: 0 },\r\n      { a: 0, b: 1, cin: 1, sum: 0, cout: 1 },\r\n      { a: 1, b: 0, cin: 0, sum: 1, cout: 0 },\r\n      { a: 1, b: 0, cin: 1, sum: 0, cout: 1 },\r\n      { a: 1, b: 1, cin: 0, sum: 0, cout: 1 },\r\n      { a: 1, b: 1, cin: 1, sum: 1, cout: 1 }\r\n    ]\r\n  };\r\n\r\n  const handleTabChange = (_, newValue) => setTabValue(newValue);\r\n\r\n  const handleRunCode = () => {\r\n    setIsCompiling(true);\r\n    setOutput('');\r\n    \r\n    // Simulate compilation and running\r\n    setTimeout(() => {\r\n      if (code.includes('assign') || code.includes('wire')) {\r\n        setOutput(`\r\nCompilation successful!\r\n\r\nRunning test cases:\r\nTest Case 1: a=0, b=0, cin=0\r\n  Expected: sum=0, cout=0\r\n  Actual:   sum=0, cout=0\r\n  Result:   âœ… PASSED\r\n\r\nTest Case 2: a=1, b=1, cin=1\r\n  Expected: sum=1, cout=1\r\n  Actual:   sum=1, cout=1\r\n  Result:   âœ… PASSED\r\n\r\nSummary: 2/2 test cases passed.\r\nðŸŽ‰ Congratulations! All tests passed.\r\n`);\r\n        setNotification({\r\n          open: true,\r\n          message: 'All tests passed! Great job!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setOutput(`\r\nCompilation Error:\r\nError: No implementation found.\r\nPlease implement the full adder logic before running the code.\r\n`);\r\n        setNotification({\r\n          open: true,\r\n          message: 'Compilation failed. Please check your code.',\r\n          severity: 'error'\r\n        });\r\n      }\r\n      \r\n      setIsCompiling(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleSaveCode = () => {\r\n    setNotification({\r\n      open: true,\r\n      message: 'Code saved successfully!',\r\n      severity: 'success'\r\n    });\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification({ ...notification, open: false });\r\n  };\r\n\r\n  const handleShowHint = () => {\r\n    setNotification({\r\n      open: true,\r\n      message: `Hint: ${exerciseData.hints[0]}`,\r\n      severity: 'info'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"container page-container\">\r\n      {/* Header */}\r\n      <Box sx={{ mb: 3 }}>\r\n        <Button \r\n          component={Link}\r\n          to=\"/modules/1\"\r\n          startIcon={<ArrowBack />}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          Back to Module\r\n        </Button>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom color=\"primary\">\r\n          {exerciseData.title}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n          {exerciseData.description}\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* Test Cases */}\r\n      <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Test Cases</Typography>\r\n        <Grid container spacing={2}>\r\n          {exerciseData.testCases.map((testCase, index) => (\r\n            <Grid item xs={12} sm={6} key={index}>\r\n              <Paper variant=\"outlined\" sx={{ p: 1, typography: 'body2', fontFamily: 'monospace' }}>\r\n                <strong>Test {index + 1}:</strong><br />\r\n                {testCase.inputs}<br />\r\n                Expected: {testCase.expectedOutputs}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n      \r\n      {/* Editor and Output */}\r\n      <Grid container spacing={2}>\r\n        {/* Editor Section */}\r\n        <Grid item xs={12} md={7}>\r\n          <Paper elevation={3} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n              <Typography variant=\"h6\">Verilog Editor</Typography>\r\n            </Box>\r\n            <Box sx={{ flexGrow: 1, p: 2, backgroundColor: '#f5f5f5', minHeight: '400px' }}>\r\n              <textarea\r\n                value={code}\r\n                onChange={(e) => setCode(e.target.value)}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '380px',\r\n                  fontFamily: 'monospace',\r\n                  fontSize: '14px',\r\n                  padding: '8px',\r\n                  border: '1px solid #ccc',\r\n                  borderRadius: '4px',\r\n                  resize: 'none',\r\n                  backgroundColor: 'white'\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider', display: 'flex', gap: 1 }}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                startIcon={<PlayArrow />}\r\n                onClick={handleRunCode}\r\n                disabled={isCompiling}\r\n              >\r\n                {isCompiling ? 'Running...' : 'Run Code'}\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<Save />}\r\n                onClick={handleSaveCode}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"secondary\"\r\n                startIcon={<LightbulbOutlined />}\r\n                onClick={handleShowHint}\r\n                sx={{ ml: 'auto' }}\r\n              >\r\n                Hint\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        {/* Output Section */}\r\n        <Grid item xs={12} md={5}>\r\n          <Paper elevation={3} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <Tabs \r\n              value={tabValue} \r\n              onChange={handleTabChange}\r\n              sx={{ borderBottom: 1, borderColor: 'divider' }}\r\n            >\r\n              <Tab label=\"Output\" />\r\n              <Tab label=\"Console\" />\r\n            </Tabs>\r\n            <Box \r\n              sx={{ \r\n                flexGrow: 1, \r\n                p: 2, \r\n                fontFamily: 'monospace', \r\n                fontSize: '14px',\r\n                backgroundColor: '#f8f8f8',\r\n                overflowY: 'auto',\r\n                whiteSpace: 'pre-wrap',\r\n                minHeight: '400px'\r\n              }}\r\n            >\r\n              {isCompiling ? \r\n                'Compiling and running your code...' : \r\n                (tabValue === 0 ? \r\n                  (output || 'Run your code to see the output here.') : \r\n                  'Console output will appear here when you run your code.'\r\n                )\r\n              }\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Notification */}\r\n      <Snackbar \r\n        open={notification.open} \r\n        autoHideDuration={6000} \r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseNotification} \r\n          severity={notification.severity} \r\n          sx={{ width: '100%' }}\r\n        >\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CodeEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}